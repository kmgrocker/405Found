{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.QRCode = QRCode;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar QRCodeImpl = require(\"qr.js/lib/QRCode\");\n\nvar ErrorCorrectLevel = require(\"qr.js/lib/ErrorCorrectLevel\");\n\nfunction QRCode() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _ref$value = _ref.value,\n      value = _ref$value === undefined ? \"\" : _ref$value,\n      _ref$level = _ref.level,\n      level = _ref$level === undefined ? \"L\" : _ref$level,\n      _ref$bgColor = _ref.bgColor,\n      bgColor = _ref$bgColor === undefined ? \"#FFFFFF\" : _ref$bgColor,\n      _ref$fgColor = _ref.fgColor,\n      fgColor = _ref$fgColor === undefined ? \"#000000\" : _ref$fgColor,\n      _ref$cellClassPrefix = _ref.cellClassPrefix,\n      cellClassPrefix = _ref$cellClassPrefix === undefined ? \"\" : _ref$cellClassPrefix,\n      otherProps = _objectWithoutProperties(_ref, [\"value\", \"level\", \"bgColor\", \"fgColor\", \"cellClassPrefix\"]); // adapted from https://github.com/zpao/qrcode.react/blob/master/src/index.js\n\n\n  var qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);\n  qrcode.addData(value);\n  qrcode.make();\n  var cells = qrcode.modules;\n  var cellClassName = cellClassPrefix && cellClassPrefix + \"-cell\";\n  var emptyCellClassName = cellClassPrefix && cellClassName + \" \" + cellClassPrefix + \"-cell-empty\";\n  var filledCellClassName = cellClassPrefix && cellClassName + \" \" + cellClassPrefix + \"-cell-filled\";\n  var cellIndex = 0; // we use simple order as a key just to avoid the key warning here\n\n  return _react2.default.createElement(\"svg\", _extends({\n    shapeRendering: \"crispEdges\",\n    viewBox: [0, 0, cells.length, cells.length].join(\" \")\n  }, otherProps), cells.map(function (row, rowIndex) {\n    return row.map(function (cell, colIndex) {\n      var className = cell ? filledCellClassName : emptyCellClassName;\n      var classNameProp = className ? {\n        className: className\n      } : null; // Only use the fill if no cellClassPrefix was set. See https://github.com/no23reason/react-qr-svg/issues/136 for reasoning.\n\n      var fill = !classNameProp && (cell ? fgColor : bgColor);\n      var styleProp = fill ? {\n        style: {\n          fill: fill\n        }\n      } : null;\n      return _react2.default.createElement(\"rect\", _extends({\n        height: 1,\n        key: cellIndex++ // string was too slow here\n\n      }, styleProp, classNameProp, {\n        width: 1,\n        x: colIndex,\n        y: rowIndex\n      }));\n    });\n  }));\n}\n\nQRCode.propTypes = {\n  value: _propTypes2.default.string.isRequired,\n  size: _propTypes2.default.number,\n  level: _propTypes2.default.oneOf([\"L\", \"M\", \"Q\", \"H\"]),\n  bgColor: _propTypes2.default.string,\n  fgColor: _propTypes2.default.string,\n  cellClassPrefix: _propTypes2.default.string\n};","map":{"version":3,"sources":["/home/ec2-user/environment/405Found/node_modules/react-qr-svg/dist-modules/components/qr-svg.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","QRCode","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","obj","__esModule","default","_objectWithoutProperties","keys","indexOf","QRCodeImpl","ErrorCorrectLevel","_ref","undefined","_ref$value","_ref$level","level","_ref$bgColor","bgColor","_ref$fgColor","fgColor","_ref$cellClassPrefix","cellClassPrefix","otherProps","qrcode","addData","make","cells","modules","cellClassName","emptyCellClassName","filledCellClassName","cellIndex","createElement","shapeRendering","viewBox","join","map","row","rowIndex","cell","colIndex","className","classNameProp","fill","styleProp","style","height","width","x","y","propTypes","string","isRequired","size","number","oneOf"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.QRCode = QRCode;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar QRCodeImpl = require(\"qr.js/lib/QRCode\");\nvar ErrorCorrectLevel = require(\"qr.js/lib/ErrorCorrectLevel\");\n\nfunction QRCode() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref$value = _ref.value,\n        value = _ref$value === undefined ? \"\" : _ref$value,\n        _ref$level = _ref.level,\n        level = _ref$level === undefined ? \"L\" : _ref$level,\n        _ref$bgColor = _ref.bgColor,\n        bgColor = _ref$bgColor === undefined ? \"#FFFFFF\" : _ref$bgColor,\n        _ref$fgColor = _ref.fgColor,\n        fgColor = _ref$fgColor === undefined ? \"#000000\" : _ref$fgColor,\n        _ref$cellClassPrefix = _ref.cellClassPrefix,\n        cellClassPrefix = _ref$cellClassPrefix === undefined ? \"\" : _ref$cellClassPrefix,\n        otherProps = _objectWithoutProperties(_ref, [\"value\", \"level\", \"bgColor\", \"fgColor\", \"cellClassPrefix\"]);\n\n    // adapted from https://github.com/zpao/qrcode.react/blob/master/src/index.js\n    var qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);\n    qrcode.addData(value);\n    qrcode.make();\n\n    var cells = qrcode.modules;\n\n    var cellClassName = cellClassPrefix && cellClassPrefix + \"-cell\";\n    var emptyCellClassName = cellClassPrefix && cellClassName + \" \" + cellClassPrefix + \"-cell-empty\";\n    var filledCellClassName = cellClassPrefix && cellClassName + \" \" + cellClassPrefix + \"-cell-filled\";\n\n    var cellIndex = 0; // we use simple order as a key just to avoid the key warning here\n\n    return _react2.default.createElement(\n        \"svg\",\n        _extends({\n            shapeRendering: \"crispEdges\",\n            viewBox: [0, 0, cells.length, cells.length].join(\" \")\n        }, otherProps),\n        cells.map(function (row, rowIndex) {\n            return row.map(function (cell, colIndex) {\n                var className = cell ? filledCellClassName : emptyCellClassName;\n                var classNameProp = className ? { className: className } : null;\n\n                // Only use the fill if no cellClassPrefix was set. See https://github.com/no23reason/react-qr-svg/issues/136 for reasoning.\n                var fill = !classNameProp && (cell ? fgColor : bgColor);\n                var styleProp = fill ? { style: { fill: fill } } : null;\n                return _react2.default.createElement(\"rect\", _extends({\n                    height: 1,\n                    key: cellIndex++ // string was too slow here\n                }, styleProp, classNameProp, {\n                    width: 1,\n                    x: colIndex,\n                    y: rowIndex\n                }));\n            });\n        })\n    );\n}\n\nQRCode.propTypes = {\n    value: _propTypes2.default.string.isRequired,\n    size: _propTypes2.default.number,\n    level: _propTypes2.default.oneOf([\"L\", \"M\", \"Q\", \"H\"]),\n    bgColor: _propTypes2.default.string,\n    fgColor: _propTypes2.default.string,\n    cellClassPrefix: _propTypes2.default.string\n};"]},"metadata":{},"sourceType":"script"}